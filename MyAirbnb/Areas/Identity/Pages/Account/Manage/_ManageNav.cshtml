@using MyAirbnb.Models
@inject SignInManager<ApplicationUser> SignInManager
@inject RoleManager<IdentityRole> RoleManager
@using MyAirbnb.Other
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();

    var isAdmin = User.IsInRole(App.AdminRole);
    var isManager = isAdmin || User.IsInRole(App.ManagerRole);
    var isWorker = isManager || User.IsInRole(App.WorkerRole);
}

<ul class="nav nav-pills flex-column">
    <li class="nav-item"><a class="nav-link @ManageNavPages.IndexNavClass(ViewContext)" id="profile" asp-page="./Index">Profile</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext)" id="change-password" asp-page="./ChangePassword">Password</a></li>

    <li class="nav-item"><a class="nav-link @ManageNavPages.ClientNavClass(ViewContext)" id="worker" asp-page="./Client">Client</a></li>


    @if (isWorker)
    {
        <li class="nav-item"><a class="nav-link @ManageNavPages.WorkerNavClass(ViewContext)" id="worker" asp-page="./Worker">Worker</a></li>
    }
    @if (isManager)
    {
        <li class="nav-item"><a class="nav-link @ManageNavPages.ManagerNavClass(ViewContext)" id="manager" asp-page="./Manager">Manager</a></li>
    }
    @if (isAdmin)
    {
        <li class="nav-item"><a class="nav-link @ManageNavPages.AdminNavClass(ViewContext)" id="admin" asp-page="./Admin">Admin</a></li>
    }
</ul>
